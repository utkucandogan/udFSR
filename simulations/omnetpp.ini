#
# udFSR : Fisheye State Routing (FSR) on OmNet++
#
# Copyright (C) 2025 Utkucan DoÄŸan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

[Config General]
description = Base setup for tests that uses unit disk model
network = WirelessA
sim-time-limit = 20s
repeat = 64


# General
*.host*.**.bitrate = 1Mbps
*.host*.ipv4.arp.typename = "GlobalArp"
*.host*.fsr.helloInterval = 10ms
*.host*.fsr.updateInterval = 50ms


# Sender
*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 1000B
*.hostA.app[0].sendInterval = exponential(12ms)
*.hostA.app[0].packetName = "UDPData"


# Receiver
*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000

## Node positioning
#*.hostR[*].mobility.typename = "StationaryMobility"
#*.hostR[*].mobility.initialX = uniform(200m, 300m)
#*.hostR[*].mobility.initialY = uniform(200m, 400m)
#*.hostR[*].mobility.initialZ = 0m


# WLAN
*.host*.wlan[0].typename = "WirelessInterface"

*.host*.wlan[0].mac.typename = "CsmaCaMac"
*.host*.wlan[0].mac.useAck = true
*.host*.wlan[0].mac.ackTimeout = 300us
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].mac.headerLength = 23B

*.host*.wlan[0].queue.typename = "DropTailQueue"
*.host*.wlan[0].queue.packetCapacity = -1

*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].radio.transmitter.communicationRange = 250m
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
*.host*.wlan[0].radio.receiver.ignoreInterference = false


# Animations
*.hostA.wlan[0].radio.displayCommunicationRange = true
*.hostB.wlan[0].radio.displayCommunicationRange = true

*.visualizer.sceneVisualizer.descriptionFigure = "title"
*.visualizer.mediumVisualizer.displaySignals = false

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.fadeOutMode = "simulationTime"
*.visualizer.physicalLinkVisualizer.fadeOutTime = 1ms
*.visualizer.physicalLinkVisualizer.packetFilter = "FsrHello"

*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.fadeOutMode = "simulationTime"
*.visualizer.dataLinkVisualizer.fadeOutTime = 1ms
*.visualizer.dataLinkVisualizer.packetFilter = "FsrUpdate"

*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.fadeOutMode = "simulationTime"
*.visualizer.networkRouteVisualizer.fadeOutTime = 10ms
*.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

#-----------------------------------------------------------------------------

[Config Advanced]
description = Advanced medium simulation
extends = General


# Environment
*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m

*.radioMedium.typename = "ApskScalarRadioMedium"
*.radioMedium.pathLoss.typename = "TwoRayGroundReflection"
*.radioMedium.backgroundNoise.power = -90dBm
*.radioMedium.mediumLimitCache.centerFrequency = 2GHz


# WLAN
*.host*.wlan[0].radio.typename = "ApskScalarRadio"
*.host*.wlan[0].radio.centerFrequency = 2GHz
*.host*.wlan[0].radio.bandwidth = 2MHz
*.host*.wlan[0].radio.transmitter.power = 1.4mW
*.host*.wlan[0].radio.transmitter.preambleDuration = 10us
*.host*.wlan[0].radio.transmitter.headerLength = 8B
*.host*.wlan[0].radio.receiver.sensitivity = -85dBm
*.host*.wlan[0].radio.receiver.energyDetection = -85dBm
*.host*.wlan[0].radio.receiver.snirThreshold = 4dB

*.host*.wlan[0].radio.antenna.typename = "ConstantGainAntenna"
*.host*.wlan[0].radio.antenna.gain = 3dB

*.hostR*.wlan[0].radio.bitErrorRate.result-recording-modes = default,+vector

#-----------------------------------------------------------------------------
